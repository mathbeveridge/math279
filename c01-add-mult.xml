<?xml version="1.0" encoding="UTF-8" ?>


<chapter xml:id="add-mult" xmlns:xi="http://www.w3.org/2001/XInclude">
	<title>Addition Principle and Multiplication Principle</title>
	<introduction>
		<p>


		<ul>
			<li>
			<p>
 <em>Addition Principle (Sum Principle):</em> If <m>A</m> and <m>B</m> are disjoint sets then
<me>
|A \cup B| = |A| + |B|.
</me>
			</p>
			</li>
			<li>
			<p>
 <em>Generalized Addition Principle:</em>
If <m>A_1, A_2, \ldots, A_k</m> are pairwise disjoint then
<me>
| A_1 \cup A_2 \cup \cdots A_k| = |A_1| + |A_2| + \cdots |A_k|.
</me>
			</p>
			</li>
			<li>
			<p>
 <em>Multiplication Principle (Product Principle):</em> If <m>A</m> and <m>B</m> are sets then
<me>
|A \times B| = |A| \cdot |B|
</me>
			</p>
			</li>
			<li>
			<p>
 <em>Generalized Multiplication Principle</em>
If  <m>A_1,  A_2, \ldots, A_k</m>, are  sets then
<me>
|A_1 \times A_2 \times \cdots \times A_k | = |A_1| \cdot |A_2| \cdots |A_k|.
</me>



			</p>
			</li>
		</ul>




	</p>
	</introduction>
	<exercises>
		<title>Practice Problems</title>

		<exercise>
			<title>License Plates</title>
			<idx><h>License Plates</h></idx>
			<statement>
				<p>
License plates in the Netherlands consist of three groups of two characters (either letters or numbers). Two of the groups must be of one type and the third group must be of the other. For example, the following are all valid license plates:
AB-12-CD, 12-34-AB, 12-AB-34
How many possible license plates are there?

<solution>
<p>
There are 6 different cases to consider:
<me>
\begin{array}{ccc}
XX-XX-## &amp; XX-##-XX &amp; ##-XX-XX  \\
XX-##-## &amp; ##-##-XX &amp; ##-XX-##
\end{array}
</me>

For each of the first three types, the product principle tells us that the number of license plates of that type is <m>(26^4)(10^2)</m>.
For each of the second three types, the product principle tells us that the number of license plates of that type is <m>(26)^2(10^4)</m>.
Therefore, by the addition principle, the total number of license plates is
<me>
3 \cdot (26^4)(10^2) + 3 \cdot (26^2)(10^4)
</me>
</p>
</solution>



				</p>
			</statement>
		</exercise>
		<exercise>
			<title>Restaurants</title>
			<idx><h>Restaurants</h></idx>
			<statement>
				<p>
I have three favorite restaurants in St Paul. Each of them has a choice of 3 kinds of soup, 4 kinds of salad and 7 different entrees.

			<ol>
				<li>
					<p>
 At <em>The Crunchy Frog</em>, you get a choice of soup or salad with your entree (choose one, not both). How many different meals can I order at <em>The Crunchy Frog</em>?

<solution>
<p>

We use the addition principle to show that there are <m>3+4=7</m> ways to choose your appetizer. Next, we choose one of 7  entrees. By the product principle, the total number of ways to order our meal is <m>7 \times 7 = 49</m>.

</p>
</solution>

					</p>
				</li>
				<li>
					<p>
 At <em>The Grey Duck</em>, you get a choice of soup <em>and</em> a choice of salad with your entree. How many different meals can I order at <em>The Grey Duck</em>?

<solution>
<p>
We are ordering a 3-course meal. So we use the product principle twice to find that the total number of possible meals is <m>3 \times 4 \times 7 = 84</m>.

</p>
</solution>

					</p>
				</li>
				<li>
					<p>
 I go to <em>The Loon and Spoon</em> for special occasions because they have 5 desserts. At this restaurant, an entree comes with your choice of 2 out of 3 of:  soup, salad and dessert.  (You are limited to at most one from each category: you cannot order 2 desserts!). How many different meals can I order at  <em>The Loon and Spoon</em>?

<solution>
<p>
Okay, this one is more complicated than the others. But we can combine the product and addition principles to  deal with choosing 2 out of the 3 choices.

Let <m>A</m> be the set of soups, <m>B</m> the set of salads and <m>C</m> the set of desserts. Therefore, <m>|A|=3</m>, <m>|B|=4|</m> and <m>|C|=5</m>. Choosing 2 out of 3 of these means choosing one element from the set
<me>
(A \times B) \cup (A \times C) \cup (B \times C).
</me>
Here, we have <m>|A \times B|=12</m> and <m>|A \times C| = 15</m> and <m>|B \times C| = 20</m>, all by the product principle. We then use the addition principle because these cartesian products are all disjoint. The number of ways to choose 2 out of 3 of these courses is <m>12 + 15 + 20 =47</m>.

			</p><p>

Next, we must choose our entree (7 choices), so the total number of meals that we can order is <m>47 \times 7 = 329</m>.

</p>
</solution>


					</p>
				</li>
			</ol>


				</p>
			</statement>
		</exercise>
		<exercise>
			<title>Subtraction Principle</title>
			<idx><h>Subtraction Principle</h></idx>
			<statement>
				<p>
Recall that  <em>subset</em> <m>B</m> of a set <m>A</m> is a subcollection of the elements of <m>A</m>. For example, the the set <m>B= \{ 1, 3, 5 \}</m> is a subset of <m>A = \{ 1, 2, 3,4,5\}</m>. Meanwhile, <m>C = \{ 2, 4, 6 \}</m> is not a subset of <m>A</m> since <m>6 \notin A</m>. We write <m>B \subset A</m> when <m>B</m> is a subset of <m>A</m>.

Suppose that <m>B \subset A</m>. Formulate a natural <em>subtraction principle</em> for the size of <m>A \backslash B</m>.

<solution>
<p>

<em>The Subtraction Principle:</em> Suppose that <m>B \subset A</m>. Then <m>| A \backslash B| = |A| - |B|</m>.

</p>
</solution>


				</p>
			</statement>
		</exercise>
		<exercise>
			<title>Passwords</title>
			<idx><h>Passwords</h></idx>
			<statement>
				<p>
A computer system requires an alphanumeric (letters and numbers) password of length 8. At least one of these characters must be a number. Use your Subtraction Principle to count the number of  passwords.

<solution>
<p>

Let <m>A</m> be the set of all alphanumeric passwords of length 8, with no further restrictions. Clearly, <m>|A_8| = (36)^8</m> by the product principle. Let <m>B</m> be the subset of all "bad" passwords. Namely, the passwords that have no numbers. We have <m>|B|= (26)^8</m>.  Therefore the set of all good passwords is <m>A \backslash B</m>, which has size <m>36^8 - 26^8</m>.


</p>
</solution>








				</p>
			</statement>
		</exercise>
	</exercises>

</chapter>
